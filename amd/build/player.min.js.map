{"version":3,"file":"player.min.js","sources":["../src/player.js"],"sourcesContent":["define(['jquery', 'core/ajax'], function($, Ajax) {\n    function loadScreenQtypeAudio($type) {\n        if ($type == 1) {\n            return `\n            <div class=\"qtype_audio\">\n                <div class=\"start_audio\">\n                    <div class=\"icon_lestening\">\n                        <i class=\"fa-solid fa-headphones fa-5xl\" style=\"color: #ffffff;\"></i>\n                    </div>\n                    <div class=\"description\">\n                        <p>You will be listening to an audio clip during this test. You will not be permitted to pause or rewind the audio while answering the questions.</p>\n                        <p>To continue, click Play.</p>\n                        <button class=\"btn btn-play-audio\" type=\"button\">\n                            <i class=\"fa fa-play-circle fa-xl\" aria-hidden=\"true\"></i>\n                            <span class=\"caption\">Play</span>\n                        </button>\n                    </div>\n                </div>\n            </div>`;\n        } else if ($type == 2) {\n            return `\n            <div class=\"qtype_audio click_to_continue\">\n                <div class=\"start_audio\">\n                <div class=\"icon_lestening\">\n                        <i class=\"fa-solid fa-headphones fa-5xl\" style=\"color: #ffffff;\"></i>\n                    </div>\n                    <div class=\"description\">\n                        <p>Click anywhere to continue</p>\n                    </div>\n                </div>\n            </div>\n            `;\n        }\n        return null;\n    }\n    return {\n        init: function() {\n            const audio = document.getElementById('audio_in_page');\n            \n            // Lấy thông tin cần thiết từ trang\n            const queryString = window.location.search;\n            const urlParams = new URLSearchParams(queryString);\n            const cmid = urlParams.get('cmid');\n            const attemptid = urlParams.get('attempt')\n            \n            $body = $('body');\n            $isAttepmt = $body.is('#page-mod-quiz-attempt')\n            // Nếu không phải trang attempt thì không chạy\n            if (!$isAttepmt) {\n                return;\n            }\n\n            $html = '';\n\n            function toogleOffScloll($status) {\n                if ($status && $isAttepmt) {\n                    $body.addClass('overflow-hidden');\n                } else {\n                    $body.removeClass('overflow-hidden');\n                }\n            }\n        \n\n            // Biến để theo dõi interval\n            let saveTimeInterval;\n\n            // Hàm lưu thời gian phát hiện tại vào database qua API\n            function saveAudioTime(currentTime) {\n                Ajax.call([{\n                    methodname: 'qtype_audio_update_playback_time',\n                    args: {\n                        cmid: parseInt(cmid),\n                        attemptid: parseInt(attemptid),\n                        audio_current_time: currentTime\n                    },\n                    done: function(response) {\n                        if (response.status) {\n                            // console.log('Audio time updated: ' + currentTime);\n                        } else {\n                            console.error('Failed to update audio time: ' + response.message);\n                        }\n                    },\n                    fail: function(error) {\n                        console.error('AJAX error: ' + error.message);\n                    }\n                }]);\n            }\n\n            // Hàm lấy thời gian đã lưu từ database\n            function getAudioTime() {\n                return new Promise((resolve, reject) => {\n                    Ajax.call([{\n                        methodname: 'qtype_audio_get_playback_time', // Bạn cần tạo thêm API này\n                        args: {\n                            cmid: parseInt(cmid),\n                            attemptid: parseInt(attemptid)\n                        },\n                        done: function(response) {\n                            if (response && response.status) {\n                                resolve(response.audio_current_time);\n                            } else {\n                                resolve(0); // Mặc định là 0 nếu không có dữ liệu\n                            }\n                        },\n                        fail: function(error) {\n                            console.error('AJAX error: ' + error.message);\n                            resolve(0); // Mặc định là 0 nếu có lỗi\n                        }\n                    }]);\n                });\n            }\n\n            // Hàm bắt đầu lưu thời gian định kỳ\n            function startSavingTime() {\n                saveTimeInterval = setInterval(() => {\n                    saveAudioTime(audio.currentTime);\n                }, 5000); // Lưu mỗi 5 giây để tránh quá nhiều request\n            }\n            function addStatusAudioPlaying() {\n                if (audio.paused) {\n                    $('.audio-playing').remove();\n                } else {\n                    if ($('.audio-playing').length == 0)\n                        $('.quiz-timer-inner').append('<span style=\"font-weight: normal; font-size: medium;\" class=\"audio-playing\"><i class=\"fa fa-volume-up\" aria-hidden=\"true\"></i>Audio is playing</span>');\n                }\n            }\n\n            // Lưu thời gian khi người dùng tạm dừng hoặc kết thúc audio\n            $(audio).on('pause ended play', function() {\n                saveAudioTime(audio.currentTime);\n                addStatusAudioPlaying();\n            });\n\n            // Khởi tạo giao diện và xử lý sự kiện\n            getAudioTime().then(savedTime => {\n                if (savedTime > 0) { // Đã có thời gian lưu trước đó\n                    audio.currentTime = parseFloat(savedTime);\n                    // Nếu thời gian lưu lớn hơn thời gian audio thì không cho phát\n                    if (savedTime < Math.round(audio.duration)) {\n                        toogleOffScloll(true);\n                        $html = loadScreenQtypeAudio(2);\n                        $body.append($html);\n                        $('.click_to_continue').on('click', function() {\n                            audio.play();\n                            toogleOffScloll(false);\n                            startSavingTime();\n                            $('.qtype_audio').remove();\n                            addStatusAudioPlaying();\n                        });\n                    }\n                    return;\n                } else { // Chưa có thời gian lưu trước đó\n                    toogleOffScloll(true);\n                    $html = loadScreenQtypeAudio(1);\n                    $body.append($html);\n                    $('.btn-play-audio').on('click', function() {\n                        audio.play();\n                        startSavingTime();\n                        toogleOffScloll(false);\n                        $('.qtype_audio').remove();\n                        addStatusAudioPlaying();\n                    });\n                }\n            });\n        }\n    };\n});"],"names":["define","$","Ajax","loadScreenQtypeAudio","$type","init","audio","document","getElementById","queryString","window","location","search","urlParams","URLSearchParams","cmid","get","attemptid","$body","$isAttepmt","is","toogleOffScloll","$status","addClass","removeClass","saveTimeInterval","saveAudioTime","currentTime","call","methodname","args","parseInt","audio_current_time","done","response","status","console","error","message","fail","startSavingTime","setInterval","addStatusAudioPlaying","paused","remove","length","append","$html","on","Promise","resolve","reject","then","savedTime","parseFloat","Math","round","duration","play"],"mappings":"AAAAA,4BAAO,CAAC,SAAU,cAAc,SAASC,EAAGC,eAC/BC,qBAAqBC,cACb,GAATA,42BAiBgB,GAATA,sdAcJ,WAEJ,CACHC,KAAM,iBACIC,MAAQC,SAASC,eAAe,iBAGhCC,YAAcC,OAAOC,SAASC,OAC9BC,UAAY,IAAIC,gBAAgBL,aAChCM,KAAOF,UAAUG,IAAI,QACrBC,UAAYJ,UAAUG,IAAI,cAEhCE,MAAQjB,EAAE,QACVkB,WAAaD,MAAME,GAAG,2BAEjBD,2BAMIE,gBAAgBC,SACjBA,SAAWH,WACXD,MAAMK,SAAS,mBAEfL,MAAMM,YAAY,uBAMtBC,0BAGKC,cAAcC,aACnBzB,KAAK0B,KAAK,CAAC,CACPC,WAAY,mCACZC,KAAM,CACFf,KAAMgB,SAAShB,MACfE,UAAWc,SAASd,WACpBe,mBAAoBL,aAExBM,KAAM,SAASC,UACPA,SAASC,QAGTC,QAAQC,MAAM,gCAAkCH,SAASI,UAGjEC,KAAM,SAASF,OACXD,QAAQC,MAAM,eAAiBA,MAAMC,sBA8BxCE,kBACLf,iBAAmBgB,aAAY,KAC3Bf,cAAcpB,MAAMqB,eACrB,cAEEe,wBACDpC,MAAMqC,OACN1C,EAAE,kBAAkB2C,SAEc,GAA9B3C,EAAE,kBAAkB4C,QACpB5C,EAAE,qBAAqB6C,OAAO,yJAvE1CC,MAAQ,GA4ER9C,EAAEK,OAAO0C,GAAG,oBAAoB,WAC5BtB,cAAcpB,MAAMqB,aACpBe,2BAxCO,IAAIO,SAAQ,CAACC,QAASC,UACzBjD,KAAK0B,KAAK,CAAC,CACPC,WAAY,gCACZC,KAAM,CACFf,KAAMgB,SAAShB,MACfE,UAAWc,SAASd,YAExBgB,KAAM,SAASC,UACPA,UAAYA,SAASC,OACrBe,QAAQhB,SAASF,oBAEjBkB,QAAQ,IAGhBX,KAAM,SAASF,OACXD,QAAQC,MAAM,eAAiBA,MAAMC,SACrCY,QAAQ,UA4BTE,MAAKC,eACZA,UAAY,SACZ/C,MAAMqB,YAAc2B,WAAWD,gBAE3BA,UAAYE,KAAKC,MAAMlD,MAAMmD,YAC7BpC,iBAAgB,GAChB0B,MAAQ5C,qBAAqB,GAC7Be,MAAM4B,OAAOC,OACb9C,EAAE,sBAAsB+C,GAAG,SAAS,WAChC1C,MAAMoD,OACNrC,iBAAgB,GAChBmB,kBACAvC,EAAE,gBAAgB2C,SAClBF,6BAKRrB,iBAAgB,GAChB0B,MAAQ5C,qBAAqB,GAC7Be,MAAM4B,OAAOC,OACb9C,EAAE,mBAAmB+C,GAAG,SAAS,WAC7B1C,MAAMoD,OACNlB,kBACAnB,iBAAgB,GAChBpB,EAAE,gBAAgB2C,SAClBF"}